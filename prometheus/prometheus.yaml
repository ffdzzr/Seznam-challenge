apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-server-conf
  labels:
    name: prometheus-server-conf
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 60s
      evaluation_interval: 15s
    scrape_configs:
    - job_name: 'prometheus-server'
      static_configs:
        - targets: ['prometheus-service.monitoring.svc:9090']
          labels:
            group: 'monitoring'
    - job_name:       'go-server'
      scrape_interval: 5s
      static_configs:
        - targets: ['go-server-service.webserver.svc:8080']
          labels:
            group: 'webserver'
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-pv-storage
spec:
  capacity:
    storage: 20Gi
  volumeMode: Filesystem
  accessModes:
  - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: local-storage
  local:
    path: /mnt/monitoring/prometheus
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - minikube
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pv-claim
  namespace: monitoring
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  namespace: monitoring
  labels:
    app: prometheus
spec:
  replicas: 1
  revisionHistoryLimit: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      volumes:
      - name: prometheus-server-conf
        configMap:
          name: prometheus-server-conf
      - name: prometheus-pv-storage
        persistentVolumeClaim:
          claimName: prometheus-pv-claim
      containers:
      - name: prometheus
        image: prom/prometheus:v3.4.1
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        ports:
          - containerPort: 9090
        volumeMounts:
          - mountPath: "/prometheus"
            name: prometheus-pv-storage
          - mountPath: "/etc/prometheus"
            name: prometheus-server-conf   
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service
  namespace: monitoring
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
    - protocol: TCP
      port: 9090
      targetPort: 9090
      nodePort: 30000
